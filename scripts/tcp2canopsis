#!/usr/bin/env python
# -*- coding: utf-8 -*-

from tcp2canopsis.daemon import Application
from argparse import ArgumentParser
import logging
import json
import sys
import os


if __name__ == '__main__':
    logging.basicConfig(
        format='[%(asctime)s]-[%(name)s:%(levelname)s]> %(message)s'
    )

    parser = ArgumentParser(description='TCP Connector for Canopsis')
    parser.add_argument(
        '-c', '--config',
        help='Path to configuration file (optionnal)'
    )
    parser.add_argument(
        '-p', '--port', type=int,
        help='Port to listen (required if no config file provided)'
    )
    parser.add_argument(
        '-a', '--amqp',
        help='AMQP url to send event (required if no config file provided'
    )
    parser.add_argument(
        '-r', '--realroute', choices=['amqp', 'devnull'],
        help='Send event to following route'
    )
    parser.add_argument(
        '-t', '--token',
        help='Authentication token'
    )
    parser.add_argument(
        '--ssl-key',
        help='PAth to SSL server key'
    )
    parser.add_argument(
        '--ssl-cert',
        help='Path to SSL server certificate'
    )
    args = parser.parse_args()

    if args.config is None:
        config = vars(args)

    else:
        cfgpath = os.path.expanduser(args.config)

        try:
            with open(cfgpath) as f:
                config = json.load(f)

            config = config['tcp2canopsis']

        except IOError as err:
            print('Impossible to open file {0}: {1}'.format(cfgpath, err))
            sys.exit(1)

        except (KeyError, ValueError) as err:
            print('Impossible to parse config {0}: {1}'.format(cfgpath, err))
            sys.exit(1)

    try:
        app = Application(config)
        ret = app()
        sys.exit(ret)

    except Exception as err:
        print('Error: {0}'.format(err))
        sys.exit(1)
